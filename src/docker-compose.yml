version: '3.7'
#
# Docker Reference Docs
# https://docs.docker.com/compose/compose-file/build/

services:
  rabbitmq: # Defaults to guest / guest
    image: rabbitmq:3-management
    container_name: 'rabbit-mq'
    hostname: rabbitmq
    env_file:
      - prod.env
    ports:
      - "5672:5672"
      - "15672:15672"
    expose:
     - 15672
     - 5672
     #- 127.0.0.1:5672:5672 #   restrict to host only NOT LAN
      #- 127.0.0.1:15672:15672 # restrict to host only NOT LAN
    volumes:
      - ~/.docker-conf/current-cost/rabbitmq/data/:/var/lib/rabbitmq/
      - ~/.docker-conf/current-cost/rabbitmq/log/:/var/log/rabbitmq
    networks:
      - currentcost-network
    healthcheck:
      test: [ "CMD", "rabbitmqctl", "status" ]
      interval: 5s
      timeout: 10s
      retries: 10
  seq:
    image: datalust/seq:latest
    container_name: seq
    hostname: seq
    restart: unless-stopped
    environment:
        - ACCEPT_EULA=Y
    ports:
        - "81:80"
        - 5341:80 
    volumes:
      - seq-logs:/data
    networks:
      - currentcost-network
  currentcost:
    image: ${DOCKER_REGISTRY-}currentcost
    container_name: 'current-cost'
    build:
      context: .
      dockerfile: CurrentCost/Dockerfile
    env_file:
      - prod.env
    ports:
      - 80:80 # expose to host LAN
    depends_on:
      rabbitmq:
        condition: service_healthy
    networks:
      - currentcost-network
 
  currentcostmonitor:
    image: ${DOCKER_REGISTRY-}current-cost-monitor
    container_name: 'current-cost-monitor'
    build:
      context: .
      dockerfile: CurrentCost.Monitor/Dockerfile
    env_file:
       - prod.env
    ports:
    - 82:82 # expose to host LAN
    - 5342:5342
    depends_on: #- otel-collector
      seq:
         condition: service_started
      rabbitmq:
        condition: service_healthy
    networks:
      - currentcost-network
   #   otel-collector:
  #  image: otel/opentelemetry-collector:0.73.0
  #  command: ["--config=/etc/otel-collector-config.yaml"]
  #  volumes:
  #    - ./scripts/otel-collector/otel-collector-config.yaml:/etc/otel-collector-config.yaml
  #  ports:
  #    - "8888:8888" 
  #    - "8889:8889" 
  #    - "13133:13133"
  #    - "4317:4317"
  #  networks:
  #    - currentcost-network
  #prometheus:
  #  build: 
  #    context: ./scripts/prometheus
  #  depends_on:
  #    - otel-collector
  #  ports:
  #    - 9090:9090
  #  networks:
  #    - currentcost-network
  ##grafana:
  ##  build: 
  ##    context: ./scripts/grafana
  ##  depends_on:
  ##    - prometheus
  ##  ports:
  ##    - 3000:3000
  ##  networks:
  ##    - currentcost-network
  #prometheus: # https://prometheus.io/docs/introduction/overview/
  #  # https://prometheus.io/docs/guides/cadvisor/#docker-compose-configuration
  #  image: prom/prometheus:latest
  #  container_name: current-cost_prometheus
  #  env_file:
  #    - prod.env
  #  ports:
  #    - 9090:9090 # Expose to LAN
  #  command:
  #  - --config.file=/etc/prometheus/prometheus.yml
  #  volumes:
  #    - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro
  #  networks:
  #    - currentcost
  #  depends_on:
  #    - cadvisor

  #cadvisor:
  #  image: gcr.io/cadvisor/cadvisor:latest
  #  container_name: current-cost_cadvisor
  #  ports:
  #  - 127.0.0.1:9080:8080 # restrict to host only NOT LAN
  #  volumes:
  #  - /:/rootfs:ro
  #  - /var/run:/var/run:rw
  #  - /sys:/sys:ro
  #  - /var/lib/docker/:/var/lib/docker:ro
  #  networks:
  #    - currentcost

  postgres:
    image: postgres:15.1-alpine
    container_name: 'current-cost_postgres'
    restart: always
    env_file:
      - prod.env
    ports:
      - "5432:5432"
      #- 127.0.0.1:5432:5432 #   restrict to host only NOT LAN
    networks:
      - currentcost-network
    volumes:
       - ./data:/var/lib/postgresql/data
    #depends_on:
    #  - currentcostmonitor

networks:
  currentcost-network:

volumes:   
  seq-logs:
